{"map":"{\"version\":3,\"sources\":[\"/srv/www/rapid_signin/src/components/CreateAccountForm/CreateAccountForm.js\",\"/srv/www/rapid_signin/src/components/LoginForm/LoginForm.js\",\"/srv/www/rapid_signin/src/components/LoginSide/LoginSide.js\",\"/srv/www/rapid_signin/src/components/InfoSide/InfoSide.js\",\"/srv/www/rapid_signin/src/App.js\",\"/srv/www/rapid_signin/src/registerServiceWorker.js\",\"/srv/www/rapid_signin/src/index.js\"],\"names\":[\"CreateAccountForm\",\"React\",\"Component\",\"_React$Component\",\"Object\",\"classCallCheck\",\"this\",\"possibleConstructorReturn\",\"getPrototypeOf\",\"apply\",\"arguments\",\"inherits\",\"createClass\",\"key\",\"value\",\"react_default\",\"a\",\"createElement\",\"TextField_default\",\"id\",\"label\",\"placeholder\",\"className\",\"margin\",\"autoFocus\",\"LoginSide\",\"CreateAccountForm_CreateAccountForm\",\"InfoSide\",\"App\",\"InfoSide_InfoSide_InfoSide\",\"LoginSide_LoginSide_LoginSide\",\"isLocalhost\",\"Boolean\",\"window\",\"location\",\"hostname\",\"match\",\"registerValidSW\",\"swUrl\",\"navigator\",\"serviceWorker\",\"register\",\"then\",\"registration\",\"onupdatefound\",\"installingWorker\",\"installing\",\"onstatechange\",\"state\",\"controller\",\"console\",\"log\",\"catch\",\"error\",\"ReactDOM\",\"render\",\"src_App_0\",\"document\",\"getElementById\",\"URL\",\"process\",\"origin\",\"addEventListener\",\"concat\",\"fetch\",\"response\",\"status\",\"headers\",\"get\",\"indexOf\",\"ready\",\"unregister\",\"reload\",\"checkValidServiceWorker\",\"registerServiceWorker\"],\"mappings\":\"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\",\"sourcesContent\":[\"import React from 'react'\\r\\nimport TextField from '@material-ui/core/TextField';\\r\\n\\r\\nexport class CreateAccountForm extends React.Component{\\r\\n    render(){\\r\\n        return (\\r\\n            <TextField\\r\\n            id=\\\"SSID Text Field\\\"\\r\\n            label=\\\"\\\"\\r\\n            placeholder=\\\"ssid\\\"\\r\\n            className=\\\"SSID Text Field\\\"\\r\\n            margin=\\\"normal\\\"\\r\\n            autoFocus\\r\\n            />\\r\\n        )\\r\\n    }\\r\\n}\",\"import React from 'react'\\r\\nimport TextField from '@material-ui/core/TextField';\\r\\n\\r\\nexport class LoginForm extends React.Component{\\r\\n    render(){\\r\\n        return (\\r\\n            <TextField\\r\\n                id=\\\"SSID Text Field\\\"\\r\\n                label=\\\"SSID\\\"\\r\\n                placeholder=\\\"\\\"\\r\\n                className=\\\"SSID Text Field\\\"\\r\\n                margin=\\\"normal\\\"\\r\\n                autoFocus\\r\\n            />\\r\\n\\r\\n        )\\r\\n    }\\r\\n}\",\"import React from 'react';\\r\\nimport './LoginSide.css';\\r\\nimport {LoginForm} from \\\"../LoginForm/LoginForm\\\";\\r\\nimport {CreateAccountForm} from '../CreateAccountForm/CreateAccountForm';\\r\\n\\r\\nexport class LoginSide extends React.Component{\\r\\n    render(){\\r\\n        return(\\r\\n            <div className=\\\"LoginSide\\\">\\r\\n                <div className=\\\"TitleSpace\\\">\\r\\n                    <h1 className=\\\"TitleText\\\">Sign in/out of the Makerspace</h1>\\r\\n                </div>\\r\\n                <div className=\\\"LowerHalf\\\">\\r\\n                    <div className=\\\"LoginFormDiv\\\">\\r\\n                        <CreateAccountForm />\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        )\\r\\n    }\\r\\n}\",\"import React from 'react';\\r\\nimport './InfoSide.css'\\r\\n\\r\\nexport class InfoSide extends React.Component{\\r\\n    render(){\\r\\n        return(\\r\\n            <div className=\\\"InfoSide\\\">\\r\\n                [Content Under Construction]\\r\\n            </div>\\r\\n        )\\r\\n    }\\r\\n}\",\"import React, { Component } from 'react';\\n//import logo from './logo.svg';\\nimport './App.css';\\nimport {LoginSide} from './components/LoginSide/LoginSide'\\nimport {InfoSide} from './components/InfoSide/InfoSide'\\n\\nclass App extends Component {\\n  render() {\\n    return (\\n      <div className=\\\"App\\\">\\n          <div className=\\\"split infoSide\\\">\\n            <InfoSide />\\n          </div>\\n          <div className=\\\"split loginSide\\\">\\n            <LoginSide />\\n          </div>\\n      </div>\\n    );\\n  }\\n}\\n\\nexport default App;\\n\",\"// In production, we register a service worker to serve assets from local cache.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on the \\\"N+1\\\" visit to a page, since previously\\n// cached resources are updated in the background.\\n\\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\\n// This link also includes instructions on opting out of this behavior.\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport default function register() {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Lets check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\\n          );\\n        });\\n      } else {\\n        // Is not local host. Just register service worker\\n        registerValidSW(swUrl);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the old content will have been purged and\\n              // the fresh content will have been added to the cache.\\n              // It's the perfect time to display a \\\"New content is\\n              // available; please refresh.\\\" message in your web app.\\n              console.log('New content is available; please refresh.');\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      if (\\n        response.status === 404 ||\\n        response.headers.get('content-type').indexOf('javascript') === -1\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport './index.css';\\nimport App from './App';\\nimport registerServiceWorker from './registerServiceWorker';\\n\\nReactDOM.render(<App />, document.getElementById('root'));\\nregisterServiceWorker();\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{224:function(e,n,t){},226:function(e,n,t){\"use strict\";t.r(n);var a=t(1),o=t.n(a),i=t(14),r=t.n(i),c=(t(80),t(15)),l=t(16),s=t(18),u=t(17),d=t(19),f=(t(82),t(84),t(34)),m=t.n(f),h=(o.a.Component,function(e){function n(){return Object(c.a)(this,n),Object(s.a)(this,Object(u.a)(n).apply(this,arguments))}return Object(d.a)(n,e),Object(l.a)(n,[{key:\"render\",value:function(){return o.a.createElement(m.a,{id:\"SSID Text Field\",label:\"\",placeholder:\"ssid\",className:\"SSID Text Field\",margin:\"normal\",autoFocus:!0})}}]),n}(o.a.Component)),p=function(e){function n(){return Object(c.a)(this,n),Object(s.a)(this,Object(u.a)(n).apply(this,arguments))}return Object(d.a)(n,e),Object(l.a)(n,[{key:\"render\",value:function(){return o.a.createElement(\"div\",{className:\"LoginSide\"},o.a.createElement(\"div\",{className:\"TitleSpace\"},o.a.createElement(\"h1\",{className:\"TitleText\"},\"Sign in/out of the Makerspace\")),o.a.createElement(\"div\",{className:\"LowerHalf\"},o.a.createElement(\"div\",{className:\"LoginFormDiv\"},o.a.createElement(h,null))))}}]),n}(o.a.Component),v=(t(224),function(e){function n(){return Object(c.a)(this,n),Object(s.a)(this,Object(u.a)(n).apply(this,arguments))}return Object(d.a)(n,e),Object(l.a)(n,[{key:\"render\",value:function(){return o.a.createElement(\"div\",{className:\"InfoSide\"},\"[Content Under Construction]\")}}]),n}(o.a.Component)),g=function(e){function n(){return Object(c.a)(this,n),Object(s.a)(this,Object(u.a)(n).apply(this,arguments))}return Object(d.a)(n,e),Object(l.a)(n,[{key:\"render\",value:function(){return o.a.createElement(\"div\",{className:\"App\"},o.a.createElement(\"div\",{className:\"split infoSide\"},o.a.createElement(v,null)),o.a.createElement(\"div\",{className:\"split loginSide\"},o.a.createElement(p,null)))}}]),n}(a.Component),b=Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));function w(e){navigator.serviceWorker.register(e).then(function(e){e.onupdatefound=function(){var n=e.installing;n.onstatechange=function(){\"installed\"===n.state&&(navigator.serviceWorker.controller?console.log(\"New content is available; please refresh.\"):console.log(\"Content is cached for offline use.\"))}}}).catch(function(e){console.error(\"Error during service worker registration:\",e)})}r.a.render(o.a.createElement(g,null),document.getElementById(\"root\")),function(){if(\"serviceWorker\"in navigator){if(new URL(\"\",window.location).origin!==window.location.origin)return;window.addEventListener(\"load\",function(){var e=\"\".concat(\"\",\"/service-worker.js\");b?(function(e){fetch(e).then(function(n){404===n.status||-1===n.headers.get(\"content-type\").indexOf(\"javascript\")?navigator.serviceWorker.ready.then(function(e){e.unregister().then(function(){window.location.reload()})}):w(e)}).catch(function(){console.log(\"No internet connection found. App is running in offline mode.\")})}(e),navigator.serviceWorker.ready.then(function(){console.log(\"This web app is being served cache-first by a service worker. To learn more, visit https://goo.gl/SC7cgQ\")})):w(e)})}}()},75:function(e,n,t){e.exports=t(226)},80:function(e,n,t){},82:function(e,n,t){},84:function(e,n,t){}},[[75,2,1]]]);","extractedComments":[]}